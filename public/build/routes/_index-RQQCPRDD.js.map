{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\_index.tsx\");\n  import.meta.hot.lastModified = \"1744003632678.257\";\n}\n// REMIX HMR END\n\n\"use client\";\nimport { useState } from \"react\";\nimport { Page, Layout, Card, Text, DataTable, Tabs, Icon, Stack } from \"@shopify/polaris\";\nimport { AnalyticsMajor, CustomersMajor, ClockMajor, ArrowUpMinor, ArrowDownMinor } from \"@shopify/polaris-icons\";\nimport AppLayout from \"~/components/AppLayout\";\nimport { LineChart, BarChart } from \"~/components/Charts\";\nexport default function Dashboard() {\n  _s();\n  const [selected, setSelected] = useState(0);\n  const handleTabChange = selectedTabIndex => setSelected(selectedTabIndex);\n  const dashboardData = {\n    queriesToday: 15,\n    totalUsers: 100,\n    activeUsersToday: 20,\n    avgResponseTime: 2.5,\n    recentQueries: [{\n      id: 1,\n      user: \"John Doe\",\n      query: \"How to add products?\",\n      time: \"5 min ago\"\n    }, {\n      id: 2,\n      user: \"Jane Smith\",\n      query: \"Setting up shipping\",\n      time: \"15 min ago\"\n    }, {\n      id: 3,\n      user: \"Mike Johnson\",\n      query: \"Payment integration\",\n      time: \"30 min ago\"\n    }, {\n      id: 4,\n      user: \"Sarah Williams\",\n      query: \"Customer support\",\n      time: \"1 hour ago\"\n    }]\n  };\n  const weeklyData = [{\n    name: \"Mon\",\n    value: 12\n  }, {\n    name: \"Tue\",\n    value: 18\n  }, {\n    name: \"Wed\",\n    value: 15\n  }, {\n    name: \"Thu\",\n    value: 22\n  }, {\n    name: \"Fri\",\n    value: 20\n  }, {\n    name: \"Sat\",\n    value: 17\n  }, {\n    name: \"Sun\",\n    value: 15\n  }];\n  const userActivityData = [{\n    name: \"Week 1\",\n    value: 40\n  }, {\n    name: \"Week 2\",\n    value: 45\n  }, {\n    name: \"Week 3\",\n    value: 55\n  }, {\n    name: \"Week 4\",\n    value: 60\n  }];\n  const tabs = [{\n    id: \"overview\",\n    content: \"Overview\"\n  }, {\n    id: \"analytics\",\n    content: \"Analytics\"\n  }, {\n    id: \"reports\",\n    content: \"Reports\"\n  }];\n  const rows = dashboardData.recentQueries.map(query => [<Stack alignment=\"center\" key={query.id}>\n      <Avatar customer name={query.user} />\n      <Stack vertical spacing=\"extraTight\">\n        <Text variant=\"bodyMd\" fontWeight=\"bold\">\n          {query.user}\n        </Text>\n        <Text variant=\"bodySm\" color=\"subdued\">\n          {query.query}\n        </Text>\n      </Stack>\n    </Stack>, <Text key={query.id} color=\"subdued\">\n      {query.time}\n    </Text>]);\n  return <AppLayout>\n      <Page title=\"Dashboard\">\n        <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange} />\n        <Layout>\n          <Layout.Section oneHalf>\n            <Card>\n              <Card.Section>\n                <Stack distribution=\"equalSpacing\" alignment=\"center\">\n                  <Stack vertical spacing=\"extraTight\">\n                    <Text variant=\"headingMd\">Queries Today</Text>\n                    <Text variant=\"headingLg\">{dashboardData.queriesToday}</Text>\n                  </Stack>\n                  <Icon source={AnalyticsMajor} color=\"base\" />\n                </Stack>\n                <Stack spacing=\"tight\" alignment=\"center\">\n                  <Icon source={ArrowUpMinor} color=\"success\" />\n                  <Text variant=\"bodySm\" color=\"success\">\n                    +12% from yesterday\n                  </Text>\n                </Stack>\n              </Card.Section>\n            </Card>\n          </Layout.Section>\n\n          <Layout.Section oneHalf>\n            <Card>\n              <Card.Section>\n                <Stack distribution=\"equalSpacing\" alignment=\"center\">\n                  <Stack vertical spacing=\"extraTight\">\n                    <Text variant=\"headingMd\">Total Users</Text>\n                    <Text variant=\"headingLg\">{dashboardData.totalUsers}</Text>\n                  </Stack>\n                  <Icon source={CustomersMajor} color=\"base\" />\n                </Stack>\n                <Stack spacing=\"tight\" alignment=\"center\">\n                  <Icon source={ArrowUpMinor} color=\"success\" />\n                  <Text variant=\"bodySm\" color=\"success\">\n                    +5% from last week\n                  </Text>\n                </Stack>\n              </Card.Section>\n            </Card>\n          </Layout.Section>\n\n          <Layout.Section oneHalf>\n            <Card>\n              <Card.Section>\n                <Stack distribution=\"equalSpacing\" alignment=\"center\">\n                  <Stack vertical spacing=\"extraTight\">\n                    <Text variant=\"headingMd\">Active Users Today</Text>\n                    <Text variant=\"headingLg\">{dashboardData.activeUsersToday}</Text>\n                  </Stack>\n                  <Icon source={CustomersMajor} color=\"base\" />\n                </Stack>\n                <Stack spacing=\"tight\" alignment=\"center\">\n                  <Icon source={ArrowUpMinor} color=\"success\" />\n                  <Text variant=\"bodySm\" color=\"success\">\n                    +8% from yesterday\n                  </Text>\n                </Stack>\n              </Card.Section>\n            </Card>\n          </Layout.Section>\n\n          <Layout.Section oneHalf>\n            <Card>\n              <Card.Section>\n                <Stack distribution=\"equalSpacing\" alignment=\"center\">\n                  <Stack vertical spacing=\"extraTight\">\n                    <Text variant=\"headingMd\">Avg. Response Time</Text>\n                    <Text variant=\"headingLg\">{dashboardData.avgResponseTime}s</Text>\n                  </Stack>\n                  <Icon source={ClockMajor} color=\"base\" />\n                </Stack>\n                <Stack spacing=\"tight\" alignment=\"center\">\n                  <Icon source={ArrowDownMinor} color=\"success\" />\n                  <Text variant=\"bodySm\" color=\"success\">\n                    -0.3s from last week\n                  </Text>\n                </Stack>\n              </Card.Section>\n            </Card>\n          </Layout.Section>\n\n          <Layout.Section>\n            <Card title=\"Queries Overview\">\n              <Card.Section>\n                <Text variant=\"bodyMd\" color=\"subdued\">\n                  Daily query volume for the past week\n                </Text>\n                <div style={{\n                height: \"300px\"\n              }}>\n                  <BarChart data={weeklyData} />\n                </div>\n              </Card.Section>\n            </Card>\n          </Layout.Section>\n\n          <Layout.Section secondary>\n            <Card title=\"User Activity\">\n              <Card.Section>\n                <Text variant=\"bodyMd\" color=\"subdued\">\n                  Weekly active users\n                </Text>\n                <div style={{\n                height: \"300px\"\n              }}>\n                  <LineChart data={userActivityData} />\n                </div>\n              </Card.Section>\n            </Card>\n          </Layout.Section>\n\n          <Layout.Section>\n            <Card title=\"Recent Queries\">\n              <Card.Section>\n                <DataTable columnContentTypes={[\"text\", \"text\"]} headings={[\"User\", \"Time\"]} rows={rows} />\n              </Card.Section>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </Page>\n    </AppLayout>;\n}\n_s(Dashboard, \"gGT9ux4E8pnUkSZL1bYkDrfRDO0=\");\n_c = Dashboard;\nfunction Avatar({\n  customer,\n  name\n}) {\n  const initials = name.split(\" \").map(n => n[0]).join(\"\");\n  return <div style={{\n    backgroundColor: \"#5c6ac4\",\n    color: \"white\",\n    width: \"36px\",\n    height: \"36px\",\n    borderRadius: \"50%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontWeight: \"bold\"\n  }}>\n      {initials}\n    </div>;\n}\n_c2 = Avatar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"Avatar\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
