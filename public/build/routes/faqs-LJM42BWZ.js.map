{
  "version": 3,
  "sources": ["../../../app/routes/faqs.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\faqs.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\faqs.tsx\");\n  import.meta.hot.lastModified = \"1744003849189.3684\";\n}\n// REMIX HMR END\n\n\"use client\";\nimport { useState, useCallback } from \"react\";\nimport { Page, Layout, Card, TextField, Button, Stack, Text, Collapsible } from \"@shopify/polaris\";\nimport { PlusMinor, DeleteMinor, EditMinor, ChevronDownMinor, ChevronUpMinor, SaveMinor } from \"@shopify/polaris-icons\";\nimport AppLayout from \"~/components/AppLayout\";\nexport default function FAQs() {\n  _s();\n  const [faqs, setFaqs] = useState([{\n    id: 1,\n    question: \"How do I install the app?\",\n    answer: \"You can install our app directly from the Shopify App Store. Simply search for our app name and click 'Add app'.\",\n    editing: false,\n    expanded: false\n  }, {\n    id: 2,\n    question: \"How do I connect my store?\",\n    answer: \"After installation, you'll be prompted to authorize the app with your Shopify store. Follow the on-screen instructions to complete the connection.\",\n    editing: false,\n    expanded: false\n  }, {\n    id: 3,\n    question: \"Is there a free trial?\",\n    answer: \"Yes, we offer a 14-day free trial with full access to all features. No credit card required to start.\",\n    editing: false,\n    expanded: false\n  }]);\n  const [newFaq, setNewFaq] = useState({\n    question: \"\",\n    answer: \"\"\n  });\n  const handleNewQuestionChange = useCallback(value => setNewFaq({\n    ...newFaq,\n    question: value\n  }), [newFaq]);\n  const handleNewAnswerChange = useCallback(value => setNewFaq({\n    ...newFaq,\n    answer: value\n  }), [newFaq]);\n  const addFaq = useCallback(() => {\n    if (newFaq.question.trim() === \"\" || newFaq.answer.trim() === \"\") return;\n    setFaqs([...faqs, {\n      id: Date.now(),\n      question: newFaq.question,\n      answer: newFaq.answer,\n      editing: false,\n      expanded: false\n    }]);\n    setNewFaq({\n      question: \"\",\n      answer: \"\"\n    });\n  }, [faqs, newFaq]);\n  const deleteFaq = useCallback(id => {\n    setFaqs(faqs.filter(faq => faq.id !== id));\n  }, [faqs]);\n  const toggleEdit = useCallback(id => {\n    setFaqs(faqs.map(faq => faq.id === id ? {\n      ...faq,\n      editing: !faq.editing\n    } : faq));\n  }, [faqs]);\n  const toggleExpand = useCallback(id => {\n    setFaqs(faqs.map(faq => faq.id === id ? {\n      ...faq,\n      expanded: !faq.expanded\n    } : faq));\n  }, [faqs]);\n  const updateFaq = useCallback((id, data) => {\n    setFaqs(faqs.map(faq => faq.id === id ? {\n      ...faq,\n      ...data\n    } : faq));\n  }, [faqs]);\n  return <AppLayout>\n      <Page title=\"FAQs\">\n        <Layout>\n          <Layout.Section>\n            <Card title=\"Manage FAQs\">\n              <Card.Section>\n                <Text variant=\"bodyMd\" color=\"subdued\">\n                  Create and edit frequently asked questions for your customers\n                </Text>\n              </Card.Section>\n\n              {faqs.map(faq => <Card.Section key={faq.id}>\n                  <Stack distribution=\"equalSpacing\" alignment=\"center\">\n                    <Stack.Item fill>\n                      {faq.editing ? <TextField value={faq.question} onChange={value => updateFaq(faq.id, {\n                    question: value\n                  })} /> : <Button plain onClick={() => toggleExpand(faq.id)} icon={faq.expanded ? ChevronUpMinor : ChevronDownMinor}>\n                          <Text variant=\"headingMd\">{faq.question}</Text>\n                        </Button>}\n                    </Stack.Item>\n                    <Stack spacing=\"tight\">\n                      <Button plain icon={faq.editing ? SaveMinor : EditMinor} onClick={() => toggleEdit(faq.id)} />\n                      <Button plain icon={DeleteMinor} onClick={() => deleteFaq(faq.id)} />\n                    </Stack>\n                  </Stack>\n\n                  <Collapsible open={faq.expanded || faq.editing} id={`faq-${faq.id}`}>\n                    <div style={{\n                  marginTop: \"1rem\"\n                }}>\n                      {faq.editing ? <TextField value={faq.answer} onChange={value => updateFaq(faq.id, {\n                    answer: value\n                  })} multiline={4} /> : <Text variant=\"bodyMd\">{faq.answer}</Text>}\n                    </div>\n                  </Collapsible>\n                </Card.Section>)}\n            </Card>\n          </Layout.Section>\n\n          <Layout.Section>\n            <Card title=\"Add New FAQ\">\n              <Card.Section>\n                <Text variant=\"bodyMd\" color=\"subdued\">\n                  Create a new frequently asked question\n                </Text>\n              </Card.Section>\n              <Card.Section>\n                <TextField label=\"Question\" value={newFaq.question} onChange={handleNewQuestionChange} placeholder=\"Enter the question\" />\n              </Card.Section>\n              <Card.Section>\n                <TextField label=\"Answer\" value={newFaq.answer} onChange={handleNewAnswerChange} placeholder=\"Enter the answer\" multiline={4} />\n              </Card.Section>\n              <Card.Section>\n                <Button primary icon={PlusMinor} onClick={addFaq}>\n                  Add FAQ\n                </Button>\n              </Card.Section>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </Page>\n    </AppLayout>;\n}\n_s(FAQs, \"hPedgfcIQh9c6YAcIAElrjLDDA4=\");\n_c = FAQs;\nvar _c;\n$RefreshReg$(_c, \"FAQs\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
